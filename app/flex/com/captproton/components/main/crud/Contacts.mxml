<?xml version="1.0" encoding="utf-8"?>
<s:Skin 
	xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:s="library://ns.adobe.com/flex/spark" 
	xmlns:d="http://ns.adobe.com/fxg/2008/dt" 
	xmlns:fc="http://ns.adobe.com/flashcatalyst/2009" 
	xmlns:mx="library://ns.adobe.com/flex/mx"
	xmlns:rx="org.restfulx.components.rx.*"
	width="100%">
	
	<s:states>
		<s:State name="List" />
		<s:State name="Item" />
	</s:states>
	
	<s:layout>
		<s:VerticalLayout/>
	</s:layout>
	
	<fx:Script><![CDATA[
		import org.restfulx.Rx;
		import org.restfulx.utils.RxUtils;
		import fatfreecrm.models.Contact;
		import fatfreecrm.models.User;
		import fatfreecrm.models.Lead;
		
		[Bindable]
		private var contact:Contact = new Contact();
				
		private function newItem():void {
			contact = new Contact();
			modelList.selectedIndex = -1;
			itemPanel.title="Add Contact";
			showForm();

		}
		
		private function saveItem():void {
			updateModelProperties();
			if (contact.id) {
				contact.update({onSuccess: onItemUpdate});
			} else {
				contact.create({onSuccess: onItemCreate});
			}
		}
		private function updateModelProperties():void {
			contact.assignee = User(assignedToComboBox.selectedItem); 
			/* contact.assignedTo = int(assignedToTextInput.text); */
/* 			contact.reportsTo = int(reportsToTextInput.text); */
			contact.firstName = firstNameTextInput.text;
			contact.lastName = lastNameTextInput.text;
			contact.access = accessTextInput.text;
			contact.title = titleTextInput.text;
			contact.department = departmentTextInput.text;
			contact.source = sourceTextInput.text;
			contact.email = emailTextInput.text;
			contact.altEmail = altEmailTextInput.text;
			contact.phone = phoneTextInput.text;
			contact.mobile = mobileTextInput.text;
			contact.fax = faxTextInput.text;
			contact.blog = blogTextInput.text;
			contact.linkedin = linkedinTextInput.text;
			contact.facebook = facebookTextInput.text;
			contact.twitter = twitterTextInput.text;
			contact.bornOn = bornOnDateField.selectedDate;
			contact.doNotCall = doNotCallCheckBox.selected;
			/* contact.deletedAt = deletedAtDateTimeTextInput.date; */
			contact.backgroundInfo = backgroundInfoTextInput.text;
			
			contact.user = User(userComboBox.selectedItem);
			contact.lead = Lead(leadComboBox.selectedItem);

		}
		
		private function destroyItem():void {
			contact.destroy({onSuccess: onItemDestroy});
		}
		
		private function onItemSelect():void {
			contact = RxUtils.clone(modelList.selectedItem) as Contact;
			showForm();
		}
		
		private function onItemCreate(result:Contact):void {
			contact = new Contact;
			returnToList();
		}
		
		private function onItemUpdate(result:Contact):void {
			modelList.selectedItem = result;
			onItemSelect();
			returnToList();
		}
		
		private function onItemDestroy(result:Contact):void {
			onItemCreate(result);
			returnToList();
		}    
		
		private function returnToList():void{
			const state:String = currentState;
			currentState='List';
			
		}
		
		private function showForm():void{
			const state:String = currentState;
			currentState='Item';
			
		}
	]]></fx:Script>
	
	<s:VGroup id="listPanel" width="100%" height="100%"
			  visible.Item="false" includeInLayout.Item ="false">
		<mx:List id="modelList"
				 width="100%" height="100%"
				 dataProvider="{Rx.models.index(Contact)}"
				 change="onItemSelect()"/>
		<mx:ControlBar width="100%">
			<mx:Button label="Add Contact" width="100%" height="30"
					   click="newItem()"/>
		</mx:ControlBar>
  </s:VGroup>
		<s:Panel id="itemPanel" title="Edit Contact" cornerRadius="0" backgroundColor="#EEEEEE" width="75%" height="500"
				 visible.List="false" includeInLayout.List ="false">
			<s:layout>
				<s:VerticalLayout/>
			</s:layout>

			<mx:Form width="100%" height="400">
				<mx:FormItem label="AssignedTo" width="100%">
<!--					<mx:TextInput id="assignedToTextInput" width="100%" text="{contact.assignedTo}"/>
-->
					<mx:ComboBox id="assignedToComboBox" width="200"
								 labelField="{User.LABEL}"
								 dataProvider="{Rx.models.index(User)}" prompt="Assignee ..."
								 selectedItem="{contact.assignee}"/>

				</mx:FormItem>
				<!--<mx:FormItem label="ReportsTo" width="100%">
					<mx:TextInput id="reportsToTextInput" width="100%" text="{contact.reportsTo}"/>
				</mx:FormItem>-->
				<mx:FormItem label="FirstName" width="100%">
					<mx:TextInput id="firstNameTextInput" width="100%" text="{contact.firstName}"/>
				</mx:FormItem>
				<mx:FormItem label="LastName" width="100%">
					<mx:TextInput id="lastNameTextInput" width="100%" text="{contact.lastName}"/>
				</mx:FormItem>
				<mx:FormItem label="Access" width="100%">
					<mx:TextInput id="accessTextInput" width="100%" text="{contact.access}"/>
				</mx:FormItem>
				<mx:FormItem label="Title" width="100%">
					<mx:TextInput id="titleTextInput" width="100%" text="{contact.title}"/>
				</mx:FormItem>
				<mx:FormItem label="Department" width="100%">
					<mx:TextInput id="departmentTextInput" width="100%" text="{contact.department}"/>
				</mx:FormItem>
				<mx:FormItem label="Source" width="100%">
					<mx:TextInput id="sourceTextInput" width="100%" text="{contact.source}"/>
				</mx:FormItem>
				<mx:FormItem label="Email" width="100%">
					<mx:TextInput id="emailTextInput" width="100%" text="{contact.email}"/>
				</mx:FormItem>
				<mx:FormItem label="AltEmail" width="100%">
					<mx:TextInput id="altEmailTextInput" width="100%" text="{contact.altEmail}"/>
				</mx:FormItem>
				<mx:FormItem label="Phone" width="100%">
					<mx:TextInput id="phoneTextInput" width="100%" text="{contact.phone}"/>
				</mx:FormItem>
				<mx:FormItem label="Mobile" width="100%">
					<mx:TextInput id="mobileTextInput" width="100%" text="{contact.mobile}"/>
				</mx:FormItem>
				<mx:FormItem label="Fax" width="100%">
					<mx:TextInput id="faxTextInput" width="100%" text="{contact.fax}"/>
				</mx:FormItem>
				<mx:FormItem label="Blog" width="100%">
					<mx:TextInput id="blogTextInput" width="100%" text="{contact.blog}"/>
				</mx:FormItem>
				<mx:FormItem label="Linkedin" width="100%">
					<mx:TextInput id="linkedinTextInput" width="100%" text="{contact.linkedin}"/>
				</mx:FormItem>
				<mx:FormItem label="Facebook" width="100%">
					<mx:TextInput id="facebookTextInput" width="100%" text="{contact.facebook}"/>
				</mx:FormItem>
				<mx:FormItem label="Twitter" width="100%">
					<mx:TextInput id="twitterTextInput" width="100%" text="{contact.twitter}"/>
				</mx:FormItem>
				<mx:FormItem label="BornOn" width="100%">
					<mx:DateField id="bornOnDateField" selectedDate="{contact.bornOn}"/>
				</mx:FormItem>
				<mx:FormItem label="DoNotCall" width="100%">
					<mx:CheckBox id="doNotCallCheckBox" selected="{contact.doNotCall}"/>
				</mx:FormItem>
				<!--<mx:FormItem label="DeletedAt" width="100%">
					<rx:DateTimeTextInput id="deletedAtDateTimeTextInput" width="200" date="{contact.deletedAt}"/>
				</mx:FormItem>-->
				<mx:FormItem label="BackgroundInfo" width="100%">
					<mx:TextInput id="backgroundInfoTextInput" width="100%" text="{contact.backgroundInfo}"/>
				</mx:FormItem>
				<mx:FormItem label="User" width="100%">
					<mx:ComboBox id="userComboBox" width="200"
								 labelField="{User.LABEL}"
								 dataProvider="{Rx.models.index(User)}" prompt="User ..."
								 selectedItem="{contact.user}"/>
				</mx:FormItem>
				<mx:FormItem label="Lead" width="100%">
					<mx:ComboBox id="leadComboBox" width="200"
								 labelField="{Lead.LABEL}"
								 dataProvider="{Rx.models.index(Lead)}" prompt="Lead ..."
								 selectedItem="{contact.lead}"/>
				</mx:FormItem>
			</mx:Form>
			<mx:ControlBar width="100%">
				<mx:Button label="Cancel" width="25%" height="30"
						   click="returnToList()"/>
				<mx:Button label="Save Contact" width="40%" height="30"
						   click="saveItem()"/>
				<mx:Button label="Delete Contact" width="35%" height="30"
						   enabled="{RxUtils.canDeleteModel(contact)}"
						   click="destroyItem()"/>
			</mx:ControlBar>
		</s:Panel>
</s:Skin>